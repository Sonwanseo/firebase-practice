[{"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/index.js":"1","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/App.js":"2","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Auth.js":"3","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Router.js":"4","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/fbase.js":"5","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Home.js":"6","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Navigation.js":"7","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Profile.js":"8","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Nweet.js":"9","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/NweetFactory.js":"10","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/AuthForm.js":"11"},{"size":208,"mtime":1612253323381,"results":"12","hashOfConfig":"13"},{"size":966,"mtime":1612529046732,"results":"14","hashOfConfig":"13"},{"size":894,"mtime":1612528907453,"results":"15","hashOfConfig":"13"},{"size":1122,"mtime":1612425322035,"results":"16","hashOfConfig":"13"},{"size":676,"mtime":1612409054374,"results":"17","hashOfConfig":"13"},{"size":860,"mtime":1612528289089,"results":"18","hashOfConfig":"13"},{"size":355,"mtime":1612423810104,"results":"19","hashOfConfig":"13"},{"size":1121,"mtime":1612529021924,"results":"20","hashOfConfig":"13"},{"size":1946,"mtime":1612413246373,"results":"21","hashOfConfig":"13"},{"size":2013,"mtime":1612528302010,"results":"22","hashOfConfig":"13"},{"size":1577,"mtime":1612528933033,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10vexpr",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/index.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/App.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Auth.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Router.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/fbase.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Home.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Navigation.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/routes/Profile.js",[],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/Nweet.js",["47"],"import React, { useState } from 'react';\nimport { dbService, storageService } from 'fbase';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        })\n        setEditing(false);\n    }\n    const onChange = (e) => {\n        const { target: { value } } = e;\n        setNewNweet(value);\n    }\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\n                        {isOwner && (\n                            <>\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\n                                <button onClick={toggleEditing}>Edit Nweet</button>\n                            </>\n                        )}\n                    </>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Nweet;","/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/NweetFactory.js",["48"],"/Users/wanseo/Desktop/github/firebase-practice/nwitter/src/components/AuthForm.js",[],{"ruleId":"49","severity":1,"message":"50","line":41,"column":52,"nodeType":"51","endLine":41,"endColumn":115},{"ruleId":"49","severity":1,"message":"50","line":50,"column":21,"nodeType":"51","endLine":50,"endColumn":72},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]